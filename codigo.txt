//************************************************************************
// @author     Desktops
// @copyright  None
// @date       05.09.2023
// @version    3.0
// @brief      Arduino Sketch
//
//************************************************************************

//************************************************************************
// Including libraries / Incluindo bibliotecas
//************************************************************************

#include <Arduino.h>
#include <EspMQTTClient.h>
#include <ArduinoJson.h>
#include <ESP32Servo.h>

//************************************************************************
// esp32 configuration / Configuração esp32
//************************************************************************

#define APP_NAME "IoT Tago+Wifi"
#define APP_VERSION "1.0.0"
#define SEPARATOR_LINE "****************************************************"

EspMQTTClient client{
  "Wokwi-GUEST", //SSID do WiFi
  "",     // Senha do wifi
  "mqtt.tago.io",  // Endereço do servidor
  "Default",       // Usuario
  "0080bb2c-7570-41ae-8917-51dc942cdf46",         // Token do device
  "Rua Frade Coutinho",           // Nome do device
  1883             // Porta de comunicação
};

void onConnectionEstablished() {
  // Ação a ser realizada quando a conexão é estabelecida
}

//************************************************************************
// Mapping pins and variables / Mapeando pinos e variáveis
//************************************************************************

int trigger = 18;
int echo = 5;

unsigned long counter;
volatile int holes;
float dist;
int rpm;
char dadosJson[100];

int servoPin = 17;

Servo servoMotor;

//************************************************************************
// Initial setup / Configuração inicial
//************************************************************************

void setup() {
  Serial.begin(9600);
  pinMode(trigger, OUTPUT);
  pinMode(echo, INPUT);
  servoMotor.attach(servoPin);
  attachInterrupt(digitalPinToInterrupt(echo), count, FALLING);
}

//************************************************************************
// Sending information to tago.io / Enviando informações para o tago.io
//************************************************************************

void send_dist() {
  StaticJsonDocument<300> documentoJson;
  documentoJson["variable"] = "volume";
  documentoJson["value"] = dist;
  serializeJson(documentoJson, dadosJson, sizeof(dadosJson));
  Serial.println("Enviando dados de volume");
  Serial.println(dadosJson);
  client.publish("topicVolume", dadosJson);
  client.loop();
}

void send_rpm() {
  StaticJsonDocument<300> documentoJson;
  documentoJson["variable"] = "rpm";
  documentoJson["value"] = rpm;
  serializeJson(documentoJson, dadosJson, sizeof(dadosJson));
  Serial.println("Enviando dados de rpm");
  Serial.println(dadosJson);
  client.publish("topicRPM", dadosJson);
  client.loop();
}

//********************************************************************************************************
// Adding to the variable holes in order to calculate rpm / Adicionando a variável holes para calcular rpm
//********************************************************************************************************

void count() {
  holes++;
}

void protection() {
  Serial.println("Protection");
}

//***********************************************************************************************************
// Calculating rpm and distance, also calling functions / Calculando rpm e distância, também chamando funções
//***********************************************************************************************************

void loop() {
  servoMotor.write(90);
  digitalWrite(trigger, LOW);
  delayMicroseconds(10);
  digitalWrite(trigger, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigger, LOW);
  dist = pulseIn(echo, HIGH) / 58.0;

  if (millis() - counter > 1000) {
    rpm = (holes / 2.0) * 60;  // Assumindo que você tem 2 furos por rotação
    holes = 0;
    counter = millis();
  }

  send_rpm();
  send_dist();

  if (dist <= 10) {
    servoMotor.write(180);
    protection();
  }

  delay(5000);
}
